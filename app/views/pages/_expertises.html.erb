<div class="banner banner-gradient banner-expertise-home white">
  <div class="container-expertise-home">
    <div class="expertise-header">
      <h1>6 Domaines d'Expertise.</h1>
      <p>Développés par 25 années d'expérience à faire prospérer votre patrimoine</p>
    </div>
    <div class="cards">
      <div class="cards-left">
        <%= link_to famille_path, class: "card famille" do %>
          <h3>Famille</h3>
        <% end %>
        <%= link_to entrepreneurs_path, class: "card entrepreneurs" do %>
          <h3>Entrepreneurs & Professions Libérales</h3>
        <% end %>
        <%= link_to assistance_administrative_path, class: "card assistance" do %>
          <h3>Assistance Administrative</h3>
        <% end %>
      </div>
      <div class="cards-right">
        <%= link_to placement_path, class: "card placement" do %>
          <h3>Placement</h3>
        <% end %>
        <%= link_to emprunt_path, class: "card emprunt" do %>
          <h3>Emprunt</h3>
        <% end %>
        <%= link_to impots_path, class: "card impots" do %>
          <h3>Impôts</h3>
        <% end %>
      </div>
    </div>


  </div>
</div>

<script>
let cardOrder = [
  ".famille",
  ".placement",
  ".entrepreneurs",
  ".emprunt",
  ".assistance",
  ".impots"
];

// Store references to card elements
const cards = cardOrder.map(selector => document.querySelector(selector));
const windowHeight = window.innerHeight;

function handleScroll() {
  const firstCard = cards[0];
  const rect = firstCard.getBoundingClientRect();
  const cardHeight = rect.height;

  if (rect.top + cardHeight / 2 <= windowHeight / 2) {
    cards.forEach((card, index) => {
      setTimeout(() => {
        card.classList.add('show-card');
      }, index * 250); // Add a delay to display each card
    });

    // Disable the scroll event listener after displaying the cards
    window.removeEventListener('scroll', handleScroll);
  }
}

window.addEventListener('scroll', handleScroll);

// Store the original card order for reference
const originalCardOrder = [...cardOrder];

// Add a media query to change the card order for small screens
const mediaQuery = window.matchMedia('(max-width: 768px)'); // Adjust the max-width as needed

function updateCardOrder(mediaQuery) {
  if (mediaQuery.matches) {
    // Change the card order for small screens
    cardOrder = [
      ".famille",
      ".entrepreneurs",
      ".assistance",
      ".placement",
      ".emprunt",
      ".impots"
    ];
  } else {
    // Revert to the original card order for larger screens
    cardOrder = originalCardOrder;
  }

  // Update the `cards` array based on the new order
  cards.forEach((_, index) => {
    cards[index] = document.querySelector(cardOrder[index]);
  });
}

// Initial call to set the card order based on screen size
updateCardOrder(mediaQuery);

// Listen for changes to the media query and update the card order accordingly
mediaQuery.addListener(updateCardOrder);


</script>


<script>
  document.addEventListener("DOMContentLoaded", function () {
    const allCards = document.querySelectorAll(".card"); // Sélectionne toutes les cartes

    allCards.forEach(function (card) {
      card.addEventListener("mouseover", function () {
        allCards.forEach(function (otherCard) {
          if (otherCard !== card) {
            otherCard.style.opacity = "0.5"; // Réduit l'opacité des autres cartes à 0.5
          }
        });
      });

      card.addEventListener("mouseout", function () {
        allCards.forEach(function (otherCard) {
          otherCard.style.opacity = "1"; // Rétablit l'opacité d'origine (1) de toutes les cartes
        });
      });
    });
  });
</script>
