<div class="banner banner-gradient banner-expertise white">
  <div class="container-expertise">
    <div class="expertise-header">
      <h1>6 Domaines d'Expertise.</h1>
      <p>Développés par 25 années d'expérience à faire prospérer votre patrimoine</p>
    </div>
    <div class="cards">
      <div class="cards-left">
        <%= link_to famille_path, class: "card famille" do %>
          <h3>Famille</h3>
        <% end %>
        <%= link_to entrepreneurs_path, class: "card entrepreneurs" do %>
          <h3>Entrepreneurs & Professions Libérales</h3>
        <% end %>
        <%= link_to assistance_administrative_path, class: "card assistance" do %>
          <h3>Assistance Administrative</h3>
        <% end %>
      </div>
      <div class="cards-right">
        <%= link_to placement_path, class: "card placement" do %>
          <h3>Placement</h3>
        <% end %>
        <%= link_to emprunt_path, class: "card emprunt" do %>
          <h3>Emprunt</h3>
        <% end %>
        <%= link_to fiscalite_path, class: "card fiscalite" do %>
          <h3>Fiscalité</h3>
        <% end %>
      </div>
    </div>


  </div>
</div>

<script>
  console.log("Le code JavaScript s'exécute ici.");
// Sélectionnez les éléments que vous souhaitez afficher au défilement
  const cards = document.querySelectorAll('.card');

  // Options pour l'intersection Observer
  const options = {
    root: null, // Utilise la fenêtre par défaut comme zone d'affichage
    rootMargin: '0px', // Aucune marge autour de la fenêtre d'affichage
    threshold: 0.5, // Au moins 50% de l'élément doit être visible
  };

  // Fonction callback à exécuter lorsque les cartes sont visibles
  function handleCardIntersection(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('show-card');
        // Vous pouvez également effectuer d'autres actions ici lorsque la carte est visible
      }
    });
  }

  // Créer un nouvel objet IntersectionObserver avec la fonction de rappel
  const cardObserver = new IntersectionObserver(handleCardIntersection, options);

  // Ajouter chaque carte à l'observateur
  cards.forEach(card => {
    cardObserver.observe(card);
  });

</script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const allCards = document.querySelectorAll(".card"); // Sélectionne toutes les cartes

    allCards.forEach(function (card) {
      card.addEventListener("mouseover", function () {
        allCards.forEach(function (otherCard) {
          if (otherCard !== card) {
            otherCard.style.opacity = "0.5"; // Réduit l'opacité des autres cartes à 0.5
          }
        });
      });

      card.addEventListener("mouseout", function () {
        allCards.forEach(function (otherCard) {
          otherCard.style.opacity = "1"; // Rétablit l'opacité d'origine (1) de toutes les cartes
        });
      });
    });
  });
</script>
