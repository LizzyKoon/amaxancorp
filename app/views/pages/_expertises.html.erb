<div class="banner banner-gradient banner-expertise white">
  <div class="container-expertise">
    <div class="expertise-header">
      <h1>6 Domaines d'Expertise.</h1>
      <p>Développés par 25 années d'expérience à faire prospérer votre patrimoine</p>
    </div>
    <div class="cards">
      <div class="cards-left">
        <%= link_to "Famille", famille_path, class: "card" %>
        <%= link_to "Entrepreneurs & Professions Libérales", entrepreneurs_path, class: "card" %>
        <%= link_to "Assistance Administrative", assistance_administrative_path, class: "card" %>
      </div>
      <div class="cards-right">
        <%= link_to "Placement", placement_path, class: "card" %>
        <%= link_to "Emprunt", emprunt_path, class: "card" %>
        <%= link_to "Fiscalité", fiscalite_path, class: "card" %>
      </div>
    </div>
  </div>
</div>

<script>
  console.log("Le code JavaScript s'exécute ici.");
// Sélectionnez les éléments que vous souhaitez afficher au défilement
  const cards = document.querySelectorAll('.card');

  // Options pour l'intersection Observer
  const options = {
    root: null, // Utilise la fenêtre par défaut comme zone d'affichage
    rootMargin: '0px', // Aucune marge autour de la fenêtre d'affichage
    threshold: 0.5, // Au moins 50% de l'élément doit être visible
  };

  // Fonction callback à exécuter lorsque les cartes sont visibles
  function handleCardIntersection(entries, observer) {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('show-card');
        // Vous pouvez également effectuer d'autres actions ici lorsque la carte est visible
      }
    });
  }

  // Créer un nouvel objet IntersectionObserver avec la fonction de rappel
  const cardObserver = new IntersectionObserver(handleCardIntersection, options);

  // Ajouter chaque carte à l'observateur
  cards.forEach(card => {
    cardObserver.observe(card);
  });

</script>
